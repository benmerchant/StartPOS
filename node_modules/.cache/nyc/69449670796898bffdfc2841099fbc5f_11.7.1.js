var cov_2nloqi543=function(){var path='Y:\\startpos\\app\\login_router.js',hash='2814564ba0baa7d4c4f439d151304aeef50e1d1b',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'Y:\\startpos\\app\\login_router.js',statementMap:{'0':{start:{line:1,column:16},end:{line:1,column:34}},'1':{start:{line:2,column:15},end:{line:2,column:31}},'2':{start:{line:3,column:17},end:{line:3,column:36}},'3':{start:{line:4,column:22},end:{line:4,column:56}},'4':{start:{line:11,column:0},end:{line:49,column:6}},'5':{start:{line:21,column:4},end:{line:21,column:25}},'6':{start:{line:22,column:4},end:{line:47,column:7}},'7':{start:{line:24,column:6},end:{line:24,column:27}},'8':{start:{line:25,column:6},end:{line:25,column:31}},'9':{start:{line:25,column:14},end:{line:25,column:31}},'10':{start:{line:27,column:6},end:{line:31,column:7}},'11':{start:{line:29,column:8},end:{line:29,column:51}},'12':{start:{line:30,column:8},end:{line:30,column:64}},'13':{start:{line:33,column:6},end:{line:33,column:48}},'14':{start:{line:36,column:6},end:{line:46,column:9}},'15':{start:{line:37,column:8},end:{line:37,column:26}},'16':{start:{line:37,column:16},end:{line:37,column:26}},'17':{start:{line:38,column:8},end:{line:44,column:9}},'18':{start:{line:39,column:10},end:{line:39,column:53}},'19':{start:{line:40,column:10},end:{line:40,column:34}},'20':{start:{line:42,column:10},end:{line:42,column:58}},'21':{start:{line:43,column:10},end:{line:43,column:68}},'22':{start:{line:52,column:0},end:{line:55,column:3}},'23':{start:{line:54,column:2},end:{line:54,column:22}},'24':{start:{line:56,column:0},end:{line:62,column:3}},'25':{start:{line:59,column:2},end:{line:61,column:5}},'26':{start:{line:60,column:4},end:{line:60,column:20}},'27':{start:{line:65,column:0},end:{line:79,column:5}},'28':{start:{line:75,column:4},end:{line:75,column:26}},'29':{start:{line:76,column:4},end:{line:76,column:26}},'30':{start:{line:77,column:4},end:{line:77,column:45}},'31':{start:{line:81,column:0},end:{line:81,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:2},end:{line:19,column:3}},loc:{start:{line:19,column:33},end:{line:49,column:3}},line:19},'1':{name:'(anonymous_1)',decl:{start:{line:22,column:37},end:{line:22,column:38}},loc:{start:{line:22,column:55},end:{line:47,column:5}},line:22},'2':{name:'(anonymous_2)',decl:{start:{line:36,column:56},end:{line:36,column:57}},loc:{start:{line:36,column:78},end:{line:46,column:7}},line:36},'3':{name:'(anonymous_3)',decl:{start:{line:52,column:23},end:{line:52,column:24}},loc:{start:{line:52,column:43},end:{line:55,column:1}},line:52},'4':{name:'(anonymous_4)',decl:{start:{line:56,column:25},end:{line:56,column:26}},loc:{start:{line:56,column:43},end:{line:62,column:1}},line:56},'5':{name:'(anonymous_5)',decl:{start:{line:59,column:31},end:{line:59,column:32}},loc:{start:{line:59,column:50},end:{line:61,column:3}},line:59},'6':{name:'(anonymous_6)',decl:{start:{line:71,column:2},end:{line:71,column:3}},loc:{start:{line:71,column:15},end:{line:79,column:3}},line:71}},branchMap:{'0':{loc:{start:{line:25,column:6},end:{line:25,column:31}},type:'if',locations:[{start:{line:25,column:6},end:{line:25,column:31}},{start:{line:25,column:6},end:{line:25,column:31}}],line:25},'1':{loc:{start:{line:27,column:6},end:{line:31,column:7}},type:'if',locations:[{start:{line:27,column:6},end:{line:31,column:7}},{start:{line:27,column:6},end:{line:31,column:7}}],line:27},'2':{loc:{start:{line:37,column:8},end:{line:37,column:26}},type:'if',locations:[{start:{line:37,column:8},end:{line:37,column:26}},{start:{line:37,column:8},end:{line:37,column:26}}],line:37},'3':{loc:{start:{line:38,column:8},end:{line:44,column:9}},type:'if',locations:[{start:{line:38,column:8},end:{line:44,column:9}},{start:{line:38,column:8},end:{line:44,column:9}}],line:38}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_2nloqi543.s[0]++,require('express'));const router=(cov_2nloqi543.s[1]++,express.Router());const passport=(cov_2nloqi543.s[2]++,require('passport'));const LocalStrategy=(cov_2nloqi543.s[3]++,require('passport-local').Strategy);// // strategy must come before login POST request
cov_2nloqi543.s[4]++;passport.use(new LocalStrategy({// rename fields
// By default, LocalStrategy expects to find credentials in parameters named
// username and password. If your site prefers to name these fields differently,
// options are available to change the defaults.
// passwordField: 'password'
usernameField:'email'},function(email,password,done){cov_2nloqi543.f[0]++;cov_2nloqi543.s[5]++;// 2: working to here so far
console.log('hey 2');cov_2nloqi543.s[6]++;Employee.findOne({email:email},function(err,user){cov_2nloqi543.f[1]++;cov_2nloqi543.s[7]++;// 4: working here so far
console.log('hey 4');cov_2nloqi543.s[8]++;if(err){cov_2nloqi543.b[0][0]++;cov_2nloqi543.s[9]++;return done(err);}else{cov_2nloqi543.b[0][1]++;}// if there is no username match
cov_2nloqi543.s[10]++;if(!user){cov_2nloqi543.b[1][0]++;cov_2nloqi543.s[11]++;// 5: working here so far
console.log('hey 5 - OR: email not in DB');cov_2nloqi543.s[12]++;return done(null,false,{message:'email not in DB.'});}else{cov_2nloqi543.b[1][1]++;}// continue if there is an employee match
cov_2nloqi543.s[13]++;console.log('hey 5 - OR: found employee');// user.password is the hashed password from the DB
// remember, user is just the session global variable
cov_2nloqi543.s[14]++;Employee.comparePassword(password,user.password,function(err,isMatch){cov_2nloqi543.f[2]++;cov_2nloqi543.s[15]++;if(err){cov_2nloqi543.b[2][0]++;cov_2nloqi543.s[16]++;throw err;}else{cov_2nloqi543.b[2][1]++;}cov_2nloqi543.s[17]++;if(isMatch){cov_2nloqi543.b[3][0]++;cov_2nloqi543.s[18]++;console.log('hey 7 - OR: passwords match');cov_2nloqi543.s[19]++;return done(null,user);}else{cov_2nloqi543.b[3][1]++;cov_2nloqi543.s[20]++;console.log('hey 7 - OR: passwords dont match');cov_2nloqi543.s[21]++;return done(null,false,{message:'Incorrect password'});}// BOOM FrickALOOOOOOOOM!!!!! it all works
});});}));// serialize and deserialize
cov_2nloqi543.s[22]++;passport.serializeUser(function(user,done){cov_2nloqi543.f[3]++;cov_2nloqi543.s[23]++;// user is a session variable
done(null,user.id);});cov_2nloqi543.s[24]++;passport.deserializeUser(function(id,done){cov_2nloqi543.f[4]++;cov_2nloqi543.s[25]++;// create this funcgion inside the model
Employee.getEmployeeById(id,function(err,user){cov_2nloqi543.f[5]++;cov_2nloqi543.s[26]++;done(err,user);});});// POST employee login
cov_2nloqi543.s[27]++;router.post('/',passport.authenticate('local',{// successRedirect: '/login/login_success',
failureRedirect:'/api/login/login_error',// 1: working to here so far (changed route to test)
failureFlash:false}),(req,res)=>{cov_2nloqi543.f[6]++;cov_2nloqi543.s[28]++;// if this function gets called, authentication was Successful
// 'req.employee' contains the autenticated user
// res.redirect('/');
console.log(req.body);cov_2nloqi543.s[29]++;console.log(req.user);cov_2nloqi543.s[30]++;res.redirect('/api/login/login_success');// return res.status(200).json({msg: 'Employee successfully logged in'});
});cov_2nloqi543.s[31]++;module.exports=router;