"use strict";var cov_1qb7vetiqt=function(){var path='Y:\\startpos\\app\\controllers\\employee.controller.js',hash='4b234cb6e4d3005b77d7cfe2d67754fefbe2a9a6',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'Y:\\startpos\\app\\controllers\\employee.controller.js',statementMap:{'0':{start:{line:2,column:17},end:{line:2,column:46}},'1':{start:{line:3,column:13},end:{line:3,column:38}},'2':{start:{line:4,column:15},end:{line:4,column:34}},'3':{start:{line:5,column:36},end:{line:5,column:70}},'4':{start:{line:6,column:34},end:{line:6,column:69}},'5':{start:{line:7,column:17},end:{line:7,column:36}},'6':{start:{line:8,column:22},end:{line:8,column:56}},'7':{start:{line:12,column:0},end:{line:21,column:2}},'8':{start:{line:13,column:2},end:{line:20,column:5}},'9':{start:{line:14,column:4},end:{line:17,column:5}},'10':{start:{line:15,column:6},end:{line:15,column:40}},'11':{start:{line:16,column:6},end:{line:16,column:23}},'12':{start:{line:18,column:4},end:{line:18,column:56}},'13':{start:{line:19,column:4},end:{line:19,column:18}},'14':{start:{line:24,column:0},end:{line:61,column:2}},'15':{start:{line:35,column:19},end:{line:35,column:40}},'16':{start:{line:36,column:4},end:{line:38,column:5}},'17':{start:{line:37,column:6},end:{line:37,column:61}},'18':{start:{line:39,column:24},end:{line:39,column:40}},'19':{start:{line:40,column:24},end:{line:40,column:46}},'20':{start:{line:42,column:4},end:{line:42,column:48}},'21':{start:{line:43,column:4},end:{line:43,column:93}},'22':{start:{line:46,column:4},end:{line:59,column:7}},'23':{start:{line:47,column:6},end:{line:58,column:9}},'24':{start:{line:48,column:8},end:{line:48,column:36}},'25':{start:{line:49,column:8},end:{line:57,column:11}},'26':{start:{line:50,column:10},end:{line:56,column:11}},'27':{start:{line:52,column:12},end:{line:52,column:46}},'28':{start:{line:53,column:12},end:{line:53,column:29}},'29':{start:{line:55,column:12},end:{line:55,column:98}},'30':{start:{line:64,column:0},end:{line:69,column:2}},'31':{start:{line:65,column:2},end:{line:68,column:5}},'32':{start:{line:66,column:4},end:{line:67,column:95}},'33':{start:{line:66,column:12},end:{line:66,column:47}},'34':{start:{line:67,column:9},end:{line:67,column:95}},'35':{start:{line:72,column:0},end:{line:82,column:2}},'36':{start:{line:73,column:2},end:{line:81,column:4}},'37':{start:{line:78,column:6},end:{line:79,column:99}},'38':{start:{line:78,column:14},end:{line:78,column:49}},'39':{start:{line:79,column:11},end:{line:79,column:99}},'40':{start:{line:87,column:0},end:{line:109,column:2}},'41':{start:{line:88,column:2},end:{line:108,column:5}},'42':{start:{line:92,column:20},end:{line:98,column:5}},'43':{start:{line:99,column:4},end:{line:107,column:6}},'44':{start:{line:104,column:8},end:{line:105,column:103}},'45':{start:{line:104,column:16},end:{line:104,column:51}},'46':{start:{line:105,column:13},end:{line:105,column:103}},'47':{start:{line:112,column:0},end:{line:117,column:2}},'48':{start:{line:113,column:2},end:{line:116,column:5}},'49':{start:{line:114,column:4},end:{line:115,column:85}},'50':{start:{line:114,column:12},end:{line:114,column:47}},'51':{start:{line:115,column:9},end:{line:115,column:85}},'52':{start:{line:123,column:0},end:{line:161,column:3}},'53':{start:{line:133,column:4},end:{line:133,column:25}},'54':{start:{line:134,column:4},end:{line:159,column:7}},'55':{start:{line:136,column:6},end:{line:136,column:27}},'56':{start:{line:137,column:6},end:{line:137,column:31}},'57':{start:{line:137,column:14},end:{line:137,column:31}},'58':{start:{line:139,column:6},end:{line:143,column:7}},'59':{start:{line:141,column:8},end:{line:141,column:51}},'60':{start:{line:142,column:8},end:{line:142,column:53}},'61':{start:{line:145,column:6},end:{line:145,column:48}},'62':{start:{line:148,column:6},end:{line:148,column:51}},'63':{start:{line:149,column:6},end:{line:158,column:9}},'64':{start:{line:150,column:8},end:{line:150,column:33}},'65':{start:{line:150,column:16},end:{line:150,column:33}},'66':{start:{line:151,column:8},end:{line:157,column:9}},'67':{start:{line:152,column:10},end:{line:152,column:53}},'68':{start:{line:153,column:10},end:{line:153,column:34}},'69':{start:{line:155,column:10},end:{line:155,column:58}},'70':{start:{line:156,column:10},end:{line:156,column:57}},'71':{start:{line:164,column:0},end:{line:167,column:3}},'72':{start:{line:166,column:2},end:{line:166,column:22}},'73':{start:{line:168,column:0},end:{line:172,column:3}},'74':{start:{line:169,column:2},end:{line:171,column:5}},'75':{start:{line:170,column:4},end:{line:170,column:20}},'76':{start:{line:190,column:0},end:{line:201,column:2}},'77':{start:{line:191,column:2},end:{line:200,column:21}},'78':{start:{line:192,column:4},end:{line:192,column:29}},'79':{start:{line:192,column:12},end:{line:192,column:29}},'80':{start:{line:193,column:4},end:{line:195,column:5}},'81':{start:{line:194,column:6},end:{line:194,column:80}},'82':{start:{line:196,column:4},end:{line:199,column:7}},'83':{start:{line:197,column:6},end:{line:197,column:31}},'84':{start:{line:197,column:14},end:{line:197,column:31}},'85':{start:{line:198,column:6},end:{line:198,column:96}},'86':{start:{line:203,column:0},end:{line:210,column:2}},'87':{start:{line:204,column:2},end:{line:208,column:3}},'88':{start:{line:204,column:16},end:{line:204,column:77}},'89':{start:{line:206,column:4},end:{line:206,column:17}},'90':{start:{line:207,column:4},end:{line:207,column:75}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:12,column:23},end:{line:12,column:24}},loc:{start:{line:12,column:43},end:{line:21,column:1}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:25},end:{line:13,column:26}},loc:{start:{line:13,column:45},end:{line:20,column:3}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:22},end:{line:60,column:3}},line:34},'3':{name:'(anonymous_3)',decl:{start:{line:46,column:23},end:{line:46,column:24}},loc:{start:{line:46,column:38},end:{line:59,column:5}},line:46},'4':{name:'(anonymous_4)',decl:{start:{line:47,column:46},end:{line:47,column:47}},loc:{start:{line:47,column:61},end:{line:58,column:7}},line:47},'5':{name:'(anonymous_5)',decl:{start:{line:49,column:25},end:{line:49,column:26}},loc:{start:{line:49,column:44},end:{line:57,column:9}},line:49},'6':{name:'(anonymous_6)',decl:{start:{line:64,column:25},end:{line:64,column:26}},loc:{start:{line:64,column:45},end:{line:69,column:1}},line:64},'7':{name:'(anonymous_7)',decl:{start:{line:65,column:35},end:{line:65,column:36}},loc:{start:{line:65,column:54},end:{line:68,column:3}},line:65},'8':{name:'(anonymous_8)',decl:{start:{line:72,column:25},end:{line:72,column:26}},loc:{start:{line:72,column:45},end:{line:82,column:1}},line:72},'9':{name:'(anonymous_9)',decl:{start:{line:77,column:4},end:{line:77,column:5}},loc:{start:{line:77,column:23},end:{line:80,column:5}},line:77},'10':{name:'(anonymous_10)',decl:{start:{line:87,column:21},end:{line:87,column:22}},loc:{start:{line:87,column:39},end:{line:109,column:1}},line:87},'11':{name:'(anonymous_11)',decl:{start:{line:88,column:36},end:{line:88,column:37}},loc:{start:{line:88,column:51},end:{line:108,column:3}},line:88},'12':{name:'(anonymous_12)',decl:{start:{line:103,column:6},end:{line:103,column:7}},loc:{start:{line:103,column:25},end:{line:106,column:7}},line:103},'13':{name:'(anonymous_13)',decl:{start:{line:112,column:25},end:{line:112,column:26}},loc:{start:{line:112,column:45},end:{line:117,column:1}},line:112},'14':{name:'(anonymous_14)',decl:{start:{line:113,column:40},end:{line:113,column:41}},loc:{start:{line:113,column:57},end:{line:116,column:3}},line:113},'15':{name:'(anonymous_15)',decl:{start:{line:131,column:2},end:{line:131,column:3}},loc:{start:{line:131,column:33},end:{line:160,column:3}},line:131},'16':{name:'(anonymous_16)',decl:{start:{line:134,column:37},end:{line:134,column:38}},loc:{start:{line:134,column:55},end:{line:159,column:5}},line:134},'17':{name:'(anonymous_17)',decl:{start:{line:149,column:46},end:{line:149,column:47}},loc:{start:{line:149,column:68},end:{line:158,column:7}},line:149},'18':{name:'(anonymous_18)',decl:{start:{line:164,column:23},end:{line:164,column:24}},loc:{start:{line:164,column:43},end:{line:167,column:1}},line:164},'19':{name:'(anonymous_19)',decl:{start:{line:168,column:25},end:{line:168,column:26}},loc:{start:{line:168,column:43},end:{line:172,column:1}},line:168},'20':{name:'(anonymous_20)',decl:{start:{line:169,column:24},end:{line:169,column:25}},loc:{start:{line:169,column:43},end:{line:171,column:3}},line:169},'21':{name:'(anonymous_21)',decl:{start:{line:190,column:16},end:{line:190,column:17}},loc:{start:{line:190,column:36},end:{line:201,column:1}},line:190},'22':{name:'(anonymous_22)',decl:{start:{line:191,column:33},end:{line:191,column:34}},loc:{start:{line:191,column:58},end:{line:200,column:3}},line:191},'23':{name:'(anonymous_23)',decl:{start:{line:196,column:20},end:{line:196,column:21}},loc:{start:{line:196,column:33},end:{line:199,column:5}},line:196},'24':{name:'(anonymous_24)',decl:{start:{line:203,column:17},end:{line:203,column:18}},loc:{start:{line:203,column:37},end:{line:210,column:1}},line:203}},branchMap:{'0':{loc:{start:{line:14,column:4},end:{line:17,column:5}},type:'if',locations:[{start:{line:14,column:4},end:{line:17,column:5}},{start:{line:14,column:4},end:{line:17,column:5}}],line:14},'1':{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:'if',locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},'2':{loc:{start:{line:50,column:10},end:{line:56,column:11}},type:'if',locations:[{start:{line:50,column:10},end:{line:56,column:11}},{start:{line:50,column:10},end:{line:56,column:11}}],line:50},'3':{loc:{start:{line:66,column:4},end:{line:67,column:95}},type:'if',locations:[{start:{line:66,column:4},end:{line:67,column:95}},{start:{line:66,column:4},end:{line:67,column:95}}],line:66},'4':{loc:{start:{line:78,column:6},end:{line:79,column:99}},type:'if',locations:[{start:{line:78,column:6},end:{line:79,column:99}},{start:{line:78,column:6},end:{line:79,column:99}}],line:78},'5':{loc:{start:{line:96,column:20},end:{line:96,column:62}},type:'binary-expr',locations:[{start:{line:96,column:20},end:{line:96,column:41}},{start:{line:96,column:45},end:{line:96,column:62}}],line:96},'6':{loc:{start:{line:97,column:27},end:{line:97,column:81}},type:'binary-expr',locations:[{start:{line:97,column:27},end:{line:97,column:54}},{start:{line:97,column:58},end:{line:97,column:81}}],line:97},'7':{loc:{start:{line:104,column:8},end:{line:105,column:103}},type:'if',locations:[{start:{line:104,column:8},end:{line:105,column:103}},{start:{line:104,column:8},end:{line:105,column:103}}],line:104},'8':{loc:{start:{line:114,column:4},end:{line:115,column:85}},type:'if',locations:[{start:{line:114,column:4},end:{line:115,column:85}},{start:{line:114,column:4},end:{line:115,column:85}}],line:114},'9':{loc:{start:{line:137,column:6},end:{line:137,column:31}},type:'if',locations:[{start:{line:137,column:6},end:{line:137,column:31}},{start:{line:137,column:6},end:{line:137,column:31}}],line:137},'10':{loc:{start:{line:139,column:6},end:{line:143,column:7}},type:'if',locations:[{start:{line:139,column:6},end:{line:143,column:7}},{start:{line:139,column:6},end:{line:143,column:7}}],line:139},'11':{loc:{start:{line:150,column:8},end:{line:150,column:33}},type:'if',locations:[{start:{line:150,column:8},end:{line:150,column:33}},{start:{line:150,column:8},end:{line:150,column:33}}],line:150},'12':{loc:{start:{line:151,column:8},end:{line:157,column:9}},type:'if',locations:[{start:{line:151,column:8},end:{line:157,column:9}},{start:{line:151,column:8},end:{line:157,column:9}}],line:151},'13':{loc:{start:{line:192,column:4},end:{line:192,column:29}},type:'if',locations:[{start:{line:192,column:4},end:{line:192,column:29}},{start:{line:192,column:4},end:{line:192,column:29}}],line:192},'14':{loc:{start:{line:193,column:4},end:{line:195,column:5}},type:'if',locations:[{start:{line:193,column:4},end:{line:195,column:5}},{start:{line:193,column:4},end:{line:195,column:5}}],line:193},'15':{loc:{start:{line:197,column:6},end:{line:197,column:31}},type:'if',locations:[{start:{line:197,column:6},end:{line:197,column:31}},{start:{line:197,column:6},end:{line:197,column:31}}],line:197},'16':{loc:{start:{line:204,column:2},end:{line:208,column:3}},type:'if',locations:[{start:{line:204,column:2},end:{line:208,column:3}},{start:{line:204,column:2},end:{line:208,column:3}}],line:204}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0,'86':0,'87':0,'88':0,'89':0,'90':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0],'15':[0,0],'16':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Employee=(cov_1qb7vetiqt.s[0]++,require('../models/employee'));const Role=(cov_1qb7vetiqt.s[1]++,require('../models/role'));const bcrypt=(cov_1qb7vetiqt.s[2]++,require('bcryptjs'));const{check,validationResult}=(cov_1qb7vetiqt.s[3]++,require('express-validator/check'));const{matchedData,sanitize}=(cov_1qb7vetiqt.s[4]++,require('express-validator/filter'));const passport=(cov_1qb7vetiqt.s[5]++,require('passport'));const LocalStrategy=(cov_1qb7vetiqt.s[6]++,require('passport-local').Strategy);// const BasicStrategy = require('passport-http').BasicStrategy;
// GET all the employees
cov_1qb7vetiqt.s[7]++;exports.getEmployees=(req,res,next)=>{cov_1qb7vetiqt.f[0]++;cov_1qb7vetiqt.s[8]++;Employee.find({}).exec((err,employees)=>{cov_1qb7vetiqt.f[1]++;cov_1qb7vetiqt.s[9]++;if(err){cov_1qb7vetiqt.b[0][0]++;cov_1qb7vetiqt.s[10]++;res.status(500).json({error:err});cov_1qb7vetiqt.s[11]++;return next(err);}else{cov_1qb7vetiqt.b[0][1]++;}cov_1qb7vetiqt.s[12]++;return res.status(200).json({employees:employees});cov_1qb7vetiqt.s[13]++;return next();});};// POST create a new employee
cov_1qb7vetiqt.s[14]++;exports.createEmployee=[// validate req.body
// only testing password because it doesn't make sense to validate the hashed password in mongoose Schema
check('password').isLength({min:8}).withMessage('Password must be at least 8 characters').isLength({max:24}).withMessage('Password must be no more than characters'),// have to check last name here so that we can ensure display_name wont attempt
// substring() on undefined
check('last_name').exists().withMessage('Must enter a last name'),(req,res,next)=>{cov_1qb7vetiqt.f[2]++;const errors=(cov_1qb7vetiqt.s[15]++,validationResult(req));cov_1qb7vetiqt.s[16]++;if(!errors.isEmpty()){cov_1qb7vetiqt.b[1][0]++;cov_1qb7vetiqt.s[17]++;return res.status(422).json({errors:errors.mapped()});}else{cov_1qb7vetiqt.b[1][1]++;}const checkedData=(cov_1qb7vetiqt.s[18]++,matchedData(req));const newEmployee=(cov_1qb7vetiqt.s[19]++,new Employee(req.body));// this is the only field we're checking with express-validator
cov_1qb7vetiqt.s[20]++;newEmployee.password=checkedData.password;cov_1qb7vetiqt.s[21]++;newEmployee.display_name=`${req.body.first_name} ${req.body.last_name.substring(0,1)}`;cov_1qb7vetiqt.s[22]++;bcrypt.genSalt(10,(err,salt)=>{cov_1qb7vetiqt.f[3]++;cov_1qb7vetiqt.s[23]++;bcrypt.hash(newEmployee.password,salt,(err,hash)=>{cov_1qb7vetiqt.f[4]++;cov_1qb7vetiqt.s[24]++;newEmployee.password=hash;cov_1qb7vetiqt.s[25]++;newEmployee.save((err,employee)=>{cov_1qb7vetiqt.f[5]++;cov_1qb7vetiqt.s[26]++;if(err){cov_1qb7vetiqt.b[2][0]++;cov_1qb7vetiqt.s[27]++;// console.error(err);
res.status(500).json({error:err});cov_1qb7vetiqt.s[28]++;return next(err);}else{cov_1qb7vetiqt.b[2][1]++;cov_1qb7vetiqt.s[29]++;return res.status(200).json({msg:'Employee successfully added',employee:employee});}});});});}];// GET one employee by _id
cov_1qb7vetiqt.s[30]++;exports.getOneEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[6]++;cov_1qb7vetiqt.s[31]++;Employee.findById(req.params.id,(err,employee)=>{cov_1qb7vetiqt.f[7]++;cov_1qb7vetiqt.s[32]++;if(err){cov_1qb7vetiqt.b[3][0]++;cov_1qb7vetiqt.s[33]++;res.status(500).json({error:err});}else{cov_1qb7vetiqt.b[3][1]++;cov_1qb7vetiqt.s[34]++;return res.status(200).json({msg:'Successfully found employee',employee:employee});}});};// PUT update one employee by _id
cov_1qb7vetiqt.s[35]++;exports.updateEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[8]++;cov_1qb7vetiqt.s[36]++;Employee.findByIdAndUpdate(req.params.id,req.body,{new:true},(err,employee)=>{cov_1qb7vetiqt.f[9]++;cov_1qb7vetiqt.s[37]++;if(err){cov_1qb7vetiqt.b[4][0]++;cov_1qb7vetiqt.s[38]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[4][1]++;cov_1qb7vetiqt.s[39]++;return res.status(200).json({msg:'Successfully updated employee',employee:employee});}});};// PUT - assign role to employee
// accepts params of employee id and role id
// searches db for the role and creates new object to push to employee.roles array
cov_1qb7vetiqt.s[40]++;exports.assignRole=(req,res,next)=>{cov_1qb7vetiqt.f[10]++;cov_1qb7vetiqt.s[41]++;Role.findById(req.params.role_id,(err,role)=>{cov_1qb7vetiqt.f[11]++;// check if the req.body has different values for certain fields
// if so assign those, if not, fall back to the values stored in the
// db for the role model
const newRole=(cov_1qb7vetiqt.s[42]++,{_id:role._id,name:role.name,salaried:role.salaried,rate_of_pay:(cov_1qb7vetiqt.b[5][0]++,req.body.granular_pay)||(cov_1qb7vetiqt.b[5][1]++,role.granular_pay),manager_privileges:(cov_1qb7vetiqt.b[6][0]++,req.body.manager_privileges)||(cov_1qb7vetiqt.b[6][1]++,role.manager_privileges)});cov_1qb7vetiqt.s[43]++;Employee.findByIdAndUpdate(req.params.id,{$push:{roles:newRole}},{new:true,safe:true},(err,employee)=>{cov_1qb7vetiqt.f[12]++;cov_1qb7vetiqt.s[44]++;if(err){cov_1qb7vetiqt.b[7][0]++;cov_1qb7vetiqt.s[45]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[7][1]++;cov_1qb7vetiqt.s[46]++;return res.status(200).json({msg:'Successfully assingned new role',employee:employee});}});});};// DELETE remove an employee by _id
cov_1qb7vetiqt.s[47]++;exports.deleteEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[13]++;cov_1qb7vetiqt.s[48]++;Employee.remove({_id:req.params.id},(err,result)=>{cov_1qb7vetiqt.f[14]++;cov_1qb7vetiqt.s[49]++;if(err){cov_1qb7vetiqt.b[8][0]++;cov_1qb7vetiqt.s[50]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[8][1]++;cov_1qb7vetiqt.s[51]++;return res.status(200).json({result,msg:'Successfully deleted employee'});}});};/////////////////////////////////////////
// // strategy must come before login POST request
cov_1qb7vetiqt.s[52]++;passport.use(new LocalStrategy({// rename fields
// By default, LocalStrategy expects to find credentials in parameters named
// username and password. If your site prefers to name these fields differently,
// options are available to change the defaults.
// passwordField: 'password'
usernameField:'email'},function(email,password,done){cov_1qb7vetiqt.f[15]++;cov_1qb7vetiqt.s[53]++;// 2: working to here so far
console.log('hey 2');cov_1qb7vetiqt.s[54]++;Employee.findOne({email:email},function(err,user){cov_1qb7vetiqt.f[16]++;cov_1qb7vetiqt.s[55]++;// 4: working here so far
console.log('hey 4');cov_1qb7vetiqt.s[56]++;if(err){cov_1qb7vetiqt.b[9][0]++;cov_1qb7vetiqt.s[57]++;return done(err);}else{cov_1qb7vetiqt.b[9][1]++;}// if there is no username match
cov_1qb7vetiqt.s[58]++;if(!user){cov_1qb7vetiqt.b[10][0]++;cov_1qb7vetiqt.s[59]++;// 5: working here so far
console.log('hey 5 - OR: email not in DB');cov_1qb7vetiqt.s[60]++;return done(null,false,'email not in DB.');}else{cov_1qb7vetiqt.b[10][1]++;}// continue if there is an employee match
cov_1qb7vetiqt.s[61]++;console.log('hey 5 - OR: found employee');// user.password is the hashed password from the DB
// remember, user is just the session global variable
cov_1qb7vetiqt.s[62]++;console.log('hey 6 - OR: checking password');cov_1qb7vetiqt.s[63]++;bcrypt.compare(password,user.password,function(err,isMatch){cov_1qb7vetiqt.f[17]++;cov_1qb7vetiqt.s[64]++;if(err){cov_1qb7vetiqt.b[11][0]++;cov_1qb7vetiqt.s[65]++;return done(err);}else{cov_1qb7vetiqt.b[11][1]++;}cov_1qb7vetiqt.s[66]++;if(isMatch){cov_1qb7vetiqt.b[12][0]++;cov_1qb7vetiqt.s[67]++;console.log('hey 7 - OR: passwords match');cov_1qb7vetiqt.s[68]++;return done(null,user);}else{cov_1qb7vetiqt.b[12][1]++;cov_1qb7vetiqt.s[69]++;console.log('hey 7 - OR: passwords dont match');cov_1qb7vetiqt.s[70]++;return done(null,false,'Incorrect password');}// BOOM FrickALOOOOOOOOM!!!!! it all works
});});}));// serialize and deserialize
cov_1qb7vetiqt.s[71]++;passport.serializeUser(function(user,done){cov_1qb7vetiqt.f[18]++;cov_1qb7vetiqt.s[72]++;// user is a session variable
done(null,user.id);});cov_1qb7vetiqt.s[73]++;passport.deserializeUser(function(id,done){cov_1qb7vetiqt.f[19]++;cov_1qb7vetiqt.s[74]++;Employee.findById(id,function(err,user){cov_1qb7vetiqt.f[20]++;cov_1qb7vetiqt.s[75]++;done(err,user);});});// exports.login = passport.authenticate('local', {
//   // successRedirect: '/api/login/login_success',
//   failureRedirect: '/api/login/login_error', // 1: working to here so far (changed route to test)
//   failureFlash: false
// }),
// function(req, res, next) {
//   // if this function gets called, authentication was Successful
//   // 'req.employee' contains the autenticated user
//   // res.redirect('/');
//   console.log(req.body);
//   console.log(req.user);
//   res.redirect('/api/login/login_success');
//   // return res.status(200).json({msg: 'Employee successfully logged in'});
// };
cov_1qb7vetiqt.s[76]++;exports.login=(req,res,next)=>{cov_1qb7vetiqt.f[21]++;cov_1qb7vetiqt.s[77]++;passport.authenticate('local',function(err,user,info){cov_1qb7vetiqt.f[22]++;cov_1qb7vetiqt.s[78]++;if(err){cov_1qb7vetiqt.b[13][0]++;cov_1qb7vetiqt.s[79]++;return next(err);}else{cov_1qb7vetiqt.b[13][1]++;}cov_1qb7vetiqt.s[80]++;if(!user){cov_1qb7vetiqt.b[14][0]++;cov_1qb7vetiqt.s[81]++;return res.status(401).json({msg:'Employee login failed',reason:info});}else{cov_1qb7vetiqt.b[14][1]++;}cov_1qb7vetiqt.s[82]++;req.logIn(user,function(err){cov_1qb7vetiqt.f[23]++;cov_1qb7vetiqt.s[83]++;if(err){cov_1qb7vetiqt.b[15][0]++;cov_1qb7vetiqt.s[84]++;return next(err);}else{cov_1qb7vetiqt.b[15][1]++;}cov_1qb7vetiqt.s[85]++;return res.status(200).json({msg:'Employee successfully logged in',employee:req.user});});})(req,res,next);};cov_1qb7vetiqt.s[86]++;exports.logout=(req,res,next)=>{cov_1qb7vetiqt.f[24]++;cov_1qb7vetiqt.s[87]++;if(!req.user){cov_1qb7vetiqt.b[16][0]++;cov_1qb7vetiqt.s[88]++;res.status(500).json({msg:'Why log out if not logged in?'});}else{cov_1qb7vetiqt.b[16][1]++;cov_1qb7vetiqt.s[89]++;req.logOut();cov_1qb7vetiqt.s[90]++;return res.status(200).json({msg:'Employee successfully logged out'});}};