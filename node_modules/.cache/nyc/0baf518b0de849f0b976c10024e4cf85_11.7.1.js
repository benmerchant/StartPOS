"use strict";var cov_2bvwuk55xr=function(){var path='Y:\\startpos\\app\\controllers\\restaurant.controller.js',hash='0488b83bbea082d240a6d7f0d574566e4dd89c30',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'Y:\\startpos\\app\\controllers\\restaurant.controller.js',statementMap:{'0':{start:{line:2,column:19},end:{line:2,column:50}},'1':{start:{line:7,column:0},end:{line:12,column:2}},'2':{start:{line:8,column:2},end:{line:11,column:5}},'3':{start:{line:9,column:4},end:{line:10,column:105}},'4':{start:{line:9,column:12},end:{line:9,column:47}},'5':{start:{line:10,column:9},end:{line:10,column:105}},'6':{start:{line:15,column:0},end:{line:28,column:2}},'7':{start:{line:18,column:24},end:{line:23,column:4}},'8':{start:{line:24,column:2},end:{line:27,column:5}},'9':{start:{line:25,column:4},end:{line:26,column:96}},'10':{start:{line:25,column:12},end:{line:25,column:47}},'11':{start:{line:26,column:9},end:{line:26,column:96}},'12':{start:{line:44,column:0},end:{line:73,column:2}},'13':{start:{line:45,column:18},end:{line:45,column:20}},'14':{start:{line:46,column:2},end:{line:62,column:3}},'15':{start:{line:47,column:23},end:{line:47,column:25}},'16':{start:{line:49,column:4},end:{line:51,column:5}},'17':{start:{line:50,column:6},end:{line:50,column:29}},'18':{start:{line:53,column:4},end:{line:55,column:7}},'19':{start:{line:54,column:6},end:{line:54,column:66}},'20':{start:{line:56,column:9},end:{line:62,column:3}},'21':{start:{line:57,column:4},end:{line:57,column:56}},'22':{start:{line:58,column:9},end:{line:62,column:3}},'23':{start:{line:59,column:4},end:{line:59,column:56}},'24':{start:{line:61,column:4},end:{line:61,column:25}},'25':{start:{line:64,column:2},end:{line:72,column:4}},'26':{start:{line:69,column:6},end:{line:70,column:98}},'27':{start:{line:69,column:14},end:{line:69,column:50}},'28':{start:{line:70,column:11},end:{line:70,column:98}},'29':{start:{line:75,column:0},end:{line:86,column:2}},'30':{start:{line:77,column:2},end:{line:85,column:4}},'31':{start:{line:82,column:6},end:{line:83,column:97}},'32':{start:{line:82,column:14},end:{line:82,column:50}},'33':{start:{line:83,column:11},end:{line:83,column:97}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:7,column:24},end:{line:7,column:25}},loc:{start:{line:7,column:42},end:{line:12,column:1}},line:7},'1':{name:'(anonymous_1)',decl:{start:{line:8,column:43},end:{line:8,column:44}},loc:{start:{line:8,column:64},end:{line:11,column:3}},line:8},'2':{name:'(anonymous_2)',decl:{start:{line:15,column:27},end:{line:15,column:28}},loc:{start:{line:15,column:47},end:{line:28,column:1}},line:15},'3':{name:'(anonymous_3)',decl:{start:{line:24,column:21},end:{line:24,column:22}},loc:{start:{line:24,column:42},end:{line:27,column:3}},line:24},'4':{name:'(anonymous_4)',decl:{start:{line:44,column:27},end:{line:44,column:28}},loc:{start:{line:44,column:47},end:{line:73,column:1}},line:44},'5':{name:'(anonymous_5)',decl:{start:{line:53,column:25},end:{line:53,column:26}},loc:{start:{line:53,column:38},end:{line:55,column:5}},line:53},'6':{name:'(anonymous_6)',decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:25},end:{line:71,column:5}},line:68},'7':{name:'(anonymous_7)',decl:{start:{line:75,column:24},end:{line:75,column:25}},loc:{start:{line:75,column:42},end:{line:86,column:1}},line:75},'8':{name:'(anonymous_8)',decl:{start:{line:81,column:4},end:{line:81,column:5}},loc:{start:{line:81,column:25},end:{line:84,column:5}},line:81}},branchMap:{'0':{loc:{start:{line:9,column:4},end:{line:10,column:105}},type:'if',locations:[{start:{line:9,column:4},end:{line:10,column:105}},{start:{line:9,column:4},end:{line:10,column:105}}],line:9},'1':{loc:{start:{line:25,column:4},end:{line:26,column:96}},type:'if',locations:[{start:{line:25,column:4},end:{line:26,column:96}},{start:{line:25,column:4},end:{line:26,column:96}}],line:25},'2':{loc:{start:{line:46,column:2},end:{line:62,column:3}},type:'if',locations:[{start:{line:46,column:2},end:{line:62,column:3}},{start:{line:46,column:2},end:{line:62,column:3}}],line:46},'3':{loc:{start:{line:56,column:9},end:{line:62,column:3}},type:'if',locations:[{start:{line:56,column:9},end:{line:62,column:3}},{start:{line:56,column:9},end:{line:62,column:3}}],line:56},'4':{loc:{start:{line:58,column:9},end:{line:62,column:3}},type:'if',locations:[{start:{line:58,column:9},end:{line:62,column:3}},{start:{line:58,column:9},end:{line:62,column:3}}],line:58},'5':{loc:{start:{line:69,column:6},end:{line:70,column:98}},type:'if',locations:[{start:{line:69,column:6},end:{line:70,column:98}},{start:{line:69,column:6},end:{line:70,column:98}}],line:69},'6':{loc:{start:{line:82,column:6},end:{line:83,column:97}},type:'if',locations:[{start:{line:82,column:6},end:{line:83,column:97}},{start:{line:82,column:6},end:{line:83,column:97}}],line:82}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Restaurant=(cov_2bvwuk55xr.s[0]++,require('../models/restaurant'));// GET restaurant
// this will only ever return one document
// can't think of a better way to store this info
cov_2bvwuk55xr.s[1]++;exports.getRestaurant=(req,res,next)=>{cov_2bvwuk55xr.f[0]++;cov_2bvwuk55xr.s[2]++;Restaurant.find({id:req.params.id}).exec((err,restaurant)=>{cov_2bvwuk55xr.f[1]++;cov_2bvwuk55xr.s[3]++;if(err){cov_2bvwuk55xr.b[0][0]++;cov_2bvwuk55xr.s[4]++;res.status(500).json({error:err});}else{cov_2bvwuk55xr.b[0][1]++;cov_2bvwuk55xr.s[5]++;return res.status(200).json({msg:'Successfully retrieved restaurant',restaurant:restaurant});}});};// POST new restaurant
cov_2bvwuk55xr.s[6]++;exports.createRestaurant=(req,res,next)=>{cov_2bvwuk55xr.f[2]++;// in the view, we will have the manager enter taxes as integers
// and handle the conversion to percentages here
const newRestaurant=(cov_2bvwuk55xr.s[7]++,new Restaurant({name:req.body.name,store_number:req.body.store_number,state_tax:req.body.state_tax/100,local_tax:req.body.local_tax/100}));cov_2bvwuk55xr.s[8]++;newRestaurant.save((err,restaurant)=>{cov_2bvwuk55xr.f[3]++;cov_2bvwuk55xr.s[9]++;if(err){cov_2bvwuk55xr.b[1][0]++;cov_2bvwuk55xr.s[10]++;res.status(422).json({error:err});}else{cov_2bvwuk55xr.b[1][1]++;cov_2bvwuk55xr.s[11]++;res.status(200).json({msg:'Successfully created restaurant',restaurant:restaurant});}});};// PUT restaurant updates
// if updating hours: must be wrapped in 'store_hours: {}'
// req.body should only contain days to be updated formatted as such :
// {store_hours:
//  {
//       monday: { open: false },
//       saturday: {start_time: 0900, end_time: 2330, open: true }
//  }
// }
// function will replace the entire day with whatever it says
// so if normally the store is open and we want to close that day
// we only need to send { open: false } and the start and end times will overwritten
//
// if updating tax, the fn will convert to a percentage before saving to db
cov_2bvwuk55xr.s[12]++;exports.updateRestaurant=(req,res,next)=>{cov_2bvwuk55xr.f[4]++;let updateObj=(cov_2bvwuk55xr.s[13]++,{});cov_2bvwuk55xr.s[14]++;if(req.body.hasOwnProperty('store_hours')){cov_2bvwuk55xr.b[2][0]++;let daysToUpdate=(cov_2bvwuk55xr.s[15]++,[]);// get the days we actually want to update from the req.body.store_hours
cov_2bvwuk55xr.s[16]++;for(let key in req.body.store_hours){cov_2bvwuk55xr.s[17]++;daysToUpdate.push(key);}// build an update object for Mongoose
cov_2bvwuk55xr.s[18]++;daysToUpdate.forEach(function(day){cov_2bvwuk55xr.f[5]++;cov_2bvwuk55xr.s[19]++;updateObj[`store_hours.${day}`]=req.body.store_hours[day];});}else{cov_2bvwuk55xr.b[2][1]++;cov_2bvwuk55xr.s[20]++;if(req.body.hasOwnProperty('state_tax')){cov_2bvwuk55xr.b[3][0]++;cov_2bvwuk55xr.s[21]++;updateObj={state_tax:req.body.state_tax/100};}else{cov_2bvwuk55xr.b[3][1]++;cov_2bvwuk55xr.s[22]++;if(req.body.hasOwnProperty('local_tax')){cov_2bvwuk55xr.b[4][0]++;cov_2bvwuk55xr.s[23]++;updateObj={local_tax:req.body.local_tax/100};}else{cov_2bvwuk55xr.b[4][1]++;cov_2bvwuk55xr.s[24]++;updateObj=req.body;}}}cov_2bvwuk55xr.s[25]++;Restaurant.findByIdAndUpdate(req.params.id,{$set:updateObj},{new:true},(err,restaurant)=>{cov_2bvwuk55xr.f[6]++;cov_2bvwuk55xr.s[26]++;if(err){cov_2bvwuk55xr.b[5][0]++;cov_2bvwuk55xr.s[27]++;res.status(422).json({errors:err});}else{cov_2bvwuk55xr.b[5][1]++;cov_2bvwuk55xr.s[28]++;res.status(200).json({msg:'Successfully updated restaurant',restaurant:restaurant});}});};cov_2bvwuk55xr.s[29]++;exports.addDiningArea=(req,res,next)=>{cov_2bvwuk55xr.f[7]++;cov_2bvwuk55xr.s[30]++;Restaurant.findByIdAndUpdate(req.params.restaurantID,{$push:{dining_areas:{name:req.body.new_dining_area}}},{new:true,safe:true},(err,restaurant)=>{cov_2bvwuk55xr.f[8]++;cov_2bvwuk55xr.s[31]++;if(err){cov_2bvwuk55xr.b[6][0]++;cov_2bvwuk55xr.s[32]++;res.status(422).json({errors:err});}else{cov_2bvwuk55xr.b[6][1]++;cov_2bvwuk55xr.s[33]++;res.status(200).json({msg:'Successfully added dining area',restaurant:restaurant});}});};