"use strict";var cov_1qb7vetiqt=function(){var path='Y:\\startpos\\app\\controllers\\employee.controller.js',hash='4982709a145107df48cd5dd4bd84adf0a9fd500f',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'Y:\\startpos\\app\\controllers\\employee.controller.js',statementMap:{'0':{start:{line:2,column:17},end:{line:2,column:46}},'1':{start:{line:3,column:13},end:{line:3,column:38}},'2':{start:{line:4,column:15},end:{line:4,column:34}},'3':{start:{line:5,column:36},end:{line:5,column:70}},'4':{start:{line:6,column:34},end:{line:6,column:69}},'5':{start:{line:7,column:17},end:{line:7,column:36}},'6':{start:{line:8,column:22},end:{line:8,column:56}},'7':{start:{line:9,column:12},end:{line:9,column:35}},'8':{start:{line:12,column:0},end:{line:19,column:2}},'9':{start:{line:13,column:2},end:{line:18,column:5}},'10':{start:{line:14,column:4},end:{line:16,column:5}},'11':{start:{line:15,column:6},end:{line:15,column:40}},'12':{start:{line:17,column:4},end:{line:17,column:56}},'13':{start:{line:22,column:0},end:{line:67,column:2}},'14':{start:{line:35,column:19},end:{line:35,column:40}},'15':{start:{line:36,column:4},end:{line:38,column:5}},'16':{start:{line:37,column:6},end:{line:37,column:61}},'17':{start:{line:39,column:24},end:{line:39,column:40}},'18':{start:{line:40,column:24},end:{line:40,column:46}},'19':{start:{line:43,column:4},end:{line:43,column:93}},'20':{start:{line:45,column:23},end:{line:45,column:38}},'21':{start:{line:47,column:4},end:{line:47,column:40}},'22':{start:{line:52,column:4},end:{line:65,column:7}},'23':{start:{line:53,column:6},end:{line:64,column:9}},'24':{start:{line:54,column:8},end:{line:54,column:36}},'25':{start:{line:55,column:8},end:{line:63,column:11}},'26':{start:{line:56,column:10},end:{line:62,column:11}},'27':{start:{line:58,column:12},end:{line:58,column:46}},'28':{start:{line:59,column:12},end:{line:59,column:29}},'29':{start:{line:61,column:12},end:{line:61,column:98}},'30':{start:{line:70,column:0},end:{line:75,column:2}},'31':{start:{line:71,column:2},end:{line:74,column:5}},'32':{start:{line:72,column:4},end:{line:73,column:95}},'33':{start:{line:72,column:12},end:{line:72,column:47}},'34':{start:{line:73,column:9},end:{line:73,column:95}},'35':{start:{line:78,column:0},end:{line:88,column:2}},'36':{start:{line:79,column:2},end:{line:87,column:4}},'37':{start:{line:84,column:6},end:{line:85,column:99}},'38':{start:{line:84,column:14},end:{line:84,column:49}},'39':{start:{line:85,column:11},end:{line:85,column:99}},'40':{start:{line:93,column:0},end:{line:115,column:2}},'41':{start:{line:94,column:2},end:{line:114,column:5}},'42':{start:{line:98,column:20},end:{line:104,column:5}},'43':{start:{line:105,column:4},end:{line:113,column:6}},'44':{start:{line:110,column:8},end:{line:111,column:103}},'45':{start:{line:110,column:16},end:{line:110,column:51}},'46':{start:{line:111,column:13},end:{line:111,column:103}},'47':{start:{line:118,column:0},end:{line:123,column:2}},'48':{start:{line:119,column:2},end:{line:122,column:5}},'49':{start:{line:120,column:4},end:{line:121,column:85}},'50':{start:{line:120,column:12},end:{line:120,column:47}},'51':{start:{line:121,column:9},end:{line:121,column:85}},'52':{start:{line:129,column:0},end:{line:167,column:3}},'53':{start:{line:140,column:4},end:{line:165,column:7}},'54':{start:{line:143,column:6},end:{line:143,column:31}},'55':{start:{line:143,column:14},end:{line:143,column:31}},'56':{start:{line:145,column:6},end:{line:149,column:7}},'57':{start:{line:148,column:8},end:{line:148,column:53}},'58':{start:{line:155,column:6},end:{line:164,column:9}},'59':{start:{line:156,column:8},end:{line:156,column:33}},'60':{start:{line:156,column:16},end:{line:156,column:33}},'61':{start:{line:157,column:8},end:{line:163,column:9}},'62':{start:{line:159,column:10},end:{line:159,column:34}},'63':{start:{line:162,column:10},end:{line:162,column:57}},'64':{start:{line:170,column:0},end:{line:173,column:3}},'65':{start:{line:172,column:2},end:{line:172,column:22}},'66':{start:{line:174,column:0},end:{line:179,column:3}},'67':{start:{line:175,column:2},end:{line:178,column:5}},'68':{start:{line:176,column:4},end:{line:176,column:77}},'69':{start:{line:177,column:4},end:{line:177,column:20}},'70':{start:{line:182,column:0},end:{line:203,column:2}},'71':{start:{line:183,column:2},end:{line:202,column:21}},'72':{start:{line:184,column:4},end:{line:184,column:29}},'73':{start:{line:184,column:12},end:{line:184,column:29}},'74':{start:{line:185,column:4},end:{line:193,column:5}},'75':{start:{line:191,column:6},end:{line:191,column:76}},'76':{start:{line:194,column:4},end:{line:201,column:7}},'77':{start:{line:195,column:6},end:{line:195,column:31}},'78':{start:{line:195,column:14},end:{line:195,column:31}},'79':{start:{line:196,column:18},end:{line:198,column:8}},'80':{start:{line:199,column:6},end:{line:199,column:62}},'81':{start:{line:205,column:0},end:{line:215,column:2}},'82':{start:{line:211,column:2},end:{line:211,column:39}},'83':{start:{line:211,column:16},end:{line:211,column:39}},'84':{start:{line:212,column:2},end:{line:212,column:15}},'85':{start:{line:213,column:2},end:{line:213,column:58}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:12,column:23},end:{line:12,column:24}},loc:{start:{line:12,column:43},end:{line:19,column:1}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:25},end:{line:13,column:26}},loc:{start:{line:13,column:45},end:{line:18,column:3}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:22},end:{line:66,column:3}},line:34},'3':{name:'(anonymous_3)',decl:{start:{line:52,column:23},end:{line:52,column:24}},loc:{start:{line:52,column:38},end:{line:65,column:5}},line:52},'4':{name:'(anonymous_4)',decl:{start:{line:53,column:46},end:{line:53,column:47}},loc:{start:{line:53,column:61},end:{line:64,column:7}},line:53},'5':{name:'(anonymous_5)',decl:{start:{line:55,column:25},end:{line:55,column:26}},loc:{start:{line:55,column:44},end:{line:63,column:9}},line:55},'6':{name:'(anonymous_6)',decl:{start:{line:70,column:25},end:{line:70,column:26}},loc:{start:{line:70,column:45},end:{line:75,column:1}},line:70},'7':{name:'(anonymous_7)',decl:{start:{line:71,column:35},end:{line:71,column:36}},loc:{start:{line:71,column:54},end:{line:74,column:3}},line:71},'8':{name:'(anonymous_8)',decl:{start:{line:78,column:25},end:{line:78,column:26}},loc:{start:{line:78,column:45},end:{line:88,column:1}},line:78},'9':{name:'(anonymous_9)',decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:23},end:{line:86,column:5}},line:83},'10':{name:'(anonymous_10)',decl:{start:{line:93,column:21},end:{line:93,column:22}},loc:{start:{line:93,column:39},end:{line:115,column:1}},line:93},'11':{name:'(anonymous_11)',decl:{start:{line:94,column:36},end:{line:94,column:37}},loc:{start:{line:94,column:51},end:{line:114,column:3}},line:94},'12':{name:'(anonymous_12)',decl:{start:{line:109,column:6},end:{line:109,column:7}},loc:{start:{line:109,column:25},end:{line:112,column:7}},line:109},'13':{name:'(anonymous_13)',decl:{start:{line:118,column:25},end:{line:118,column:26}},loc:{start:{line:118,column:45},end:{line:123,column:1}},line:118},'14':{name:'(anonymous_14)',decl:{start:{line:119,column:40},end:{line:119,column:41}},loc:{start:{line:119,column:57},end:{line:122,column:3}},line:119},'15':{name:'(anonymous_15)',decl:{start:{line:137,column:2},end:{line:137,column:3}},loc:{start:{line:137,column:33},end:{line:166,column:3}},line:137},'16':{name:'(anonymous_16)',decl:{start:{line:140,column:37},end:{line:140,column:38}},loc:{start:{line:140,column:55},end:{line:165,column:5}},line:140},'17':{name:'(anonymous_17)',decl:{start:{line:155,column:46},end:{line:155,column:47}},loc:{start:{line:155,column:68},end:{line:164,column:7}},line:155},'18':{name:'(anonymous_18)',decl:{start:{line:170,column:23},end:{line:170,column:24}},loc:{start:{line:170,column:43},end:{line:173,column:1}},line:170},'19':{name:'(anonymous_19)',decl:{start:{line:174,column:25},end:{line:174,column:26}},loc:{start:{line:174,column:43},end:{line:179,column:1}},line:174},'20':{name:'(anonymous_20)',decl:{start:{line:175,column:24},end:{line:175,column:25}},loc:{start:{line:175,column:43},end:{line:178,column:3}},line:175},'21':{name:'(anonymous_21)',decl:{start:{line:182,column:16},end:{line:182,column:17}},loc:{start:{line:182,column:36},end:{line:203,column:1}},line:182},'22':{name:'(anonymous_22)',decl:{start:{line:183,column:33},end:{line:183,column:34}},loc:{start:{line:183,column:58},end:{line:202,column:3}},line:183},'23':{name:'(anonymous_23)',decl:{start:{line:194,column:20},end:{line:194,column:21}},loc:{start:{line:194,column:33},end:{line:201,column:5}},line:194},'24':{name:'(anonymous_24)',decl:{start:{line:205,column:17},end:{line:205,column:18}},loc:{start:{line:205,column:37},end:{line:215,column:1}},line:205}},branchMap:{'0':{loc:{start:{line:14,column:4},end:{line:16,column:5}},type:'if',locations:[{start:{line:14,column:4},end:{line:16,column:5}},{start:{line:14,column:4},end:{line:16,column:5}}],line:14},'1':{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:'if',locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},'2':{loc:{start:{line:56,column:10},end:{line:62,column:11}},type:'if',locations:[{start:{line:56,column:10},end:{line:62,column:11}},{start:{line:56,column:10},end:{line:62,column:11}}],line:56},'3':{loc:{start:{line:72,column:4},end:{line:73,column:95}},type:'if',locations:[{start:{line:72,column:4},end:{line:73,column:95}},{start:{line:72,column:4},end:{line:73,column:95}}],line:72},'4':{loc:{start:{line:84,column:6},end:{line:85,column:99}},type:'if',locations:[{start:{line:84,column:6},end:{line:85,column:99}},{start:{line:84,column:6},end:{line:85,column:99}}],line:84},'5':{loc:{start:{line:102,column:20},end:{line:102,column:62}},type:'binary-expr',locations:[{start:{line:102,column:20},end:{line:102,column:41}},{start:{line:102,column:45},end:{line:102,column:62}}],line:102},'6':{loc:{start:{line:103,column:27},end:{line:103,column:81}},type:'binary-expr',locations:[{start:{line:103,column:27},end:{line:103,column:54}},{start:{line:103,column:58},end:{line:103,column:81}}],line:103},'7':{loc:{start:{line:110,column:8},end:{line:111,column:103}},type:'if',locations:[{start:{line:110,column:8},end:{line:111,column:103}},{start:{line:110,column:8},end:{line:111,column:103}}],line:110},'8':{loc:{start:{line:120,column:4},end:{line:121,column:85}},type:'if',locations:[{start:{line:120,column:4},end:{line:121,column:85}},{start:{line:120,column:4},end:{line:121,column:85}}],line:120},'9':{loc:{start:{line:143,column:6},end:{line:143,column:31}},type:'if',locations:[{start:{line:143,column:6},end:{line:143,column:31}},{start:{line:143,column:6},end:{line:143,column:31}}],line:143},'10':{loc:{start:{line:145,column:6},end:{line:149,column:7}},type:'if',locations:[{start:{line:145,column:6},end:{line:149,column:7}},{start:{line:145,column:6},end:{line:149,column:7}}],line:145},'11':{loc:{start:{line:156,column:8},end:{line:156,column:33}},type:'if',locations:[{start:{line:156,column:8},end:{line:156,column:33}},{start:{line:156,column:8},end:{line:156,column:33}}],line:156},'12':{loc:{start:{line:157,column:8},end:{line:163,column:9}},type:'if',locations:[{start:{line:157,column:8},end:{line:163,column:9}},{start:{line:157,column:8},end:{line:163,column:9}}],line:157},'13':{loc:{start:{line:184,column:4},end:{line:184,column:29}},type:'if',locations:[{start:{line:184,column:4},end:{line:184,column:29}},{start:{line:184,column:4},end:{line:184,column:29}}],line:184},'14':{loc:{start:{line:185,column:4},end:{line:193,column:5}},type:'if',locations:[{start:{line:185,column:4},end:{line:193,column:5}},{start:{line:185,column:4},end:{line:193,column:5}}],line:185},'15':{loc:{start:{line:195,column:6},end:{line:195,column:31}},type:'if',locations:[{start:{line:195,column:6},end:{line:195,column:31}},{start:{line:195,column:6},end:{line:195,column:31}}],line:195},'16':{loc:{start:{line:211,column:2},end:{line:211,column:39}},type:'if',locations:[{start:{line:211,column:2},end:{line:211,column:39}},{start:{line:211,column:2},end:{line:211,column:39}}],line:211}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0],'15':[0,0],'16':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Employee=(cov_1qb7vetiqt.s[0]++,require('../models/employee'));const Role=(cov_1qb7vetiqt.s[1]++,require('../models/role'));const bcrypt=(cov_1qb7vetiqt.s[2]++,require('bcryptjs'));const{check,validationResult}=(cov_1qb7vetiqt.s[3]++,require('express-validator/check'));const{matchedData,sanitize}=(cov_1qb7vetiqt.s[4]++,require('express-validator/filter'));const passport=(cov_1qb7vetiqt.s[5]++,require('passport'));const LocalStrategy=(cov_1qb7vetiqt.s[6]++,require('passport-local').Strategy);const jwt=(cov_1qb7vetiqt.s[7]++,require('jsonwebtoken'));// GET all the employees
cov_1qb7vetiqt.s[8]++;exports.getEmployees=(req,res,next)=>{cov_1qb7vetiqt.f[0]++;cov_1qb7vetiqt.s[9]++;Employee.find({}).exec((err,employees)=>{cov_1qb7vetiqt.f[1]++;cov_1qb7vetiqt.s[10]++;if(err){cov_1qb7vetiqt.b[0][0]++;cov_1qb7vetiqt.s[11]++;res.status(500).json({error:err});}else{cov_1qb7vetiqt.b[0][1]++;}cov_1qb7vetiqt.s[12]++;return res.status(200).json({employees:employees});});};// POST create a new employee
cov_1qb7vetiqt.s[13]++;exports.createEmployee=[// validate req.body
// now generating temp password
// only testing password because it doesn't make sense to validate the hashed password in mongoose Schema
// check('password')
//   .isLength({min:8}).withMessage('Password must be at least 8 characters')
//   .isLength({max:24}).withMessage('Password must be no more than characters'),
// have to check last name here so that we can ensure display_name wont attempt
// substring() on undefined
check('last_name').exists().withMessage('Must enter a last name'),(req,res,next)=>{cov_1qb7vetiqt.f[2]++;const errors=(cov_1qb7vetiqt.s[14]++,validationResult(req));cov_1qb7vetiqt.s[15]++;if(!errors.isEmpty()){cov_1qb7vetiqt.b[1][0]++;cov_1qb7vetiqt.s[16]++;return res.status(422).json({errors:errors.mapped()});}else{cov_1qb7vetiqt.b[1][1]++;}const checkedData=(cov_1qb7vetiqt.s[17]++,matchedData(req));const newEmployee=(cov_1qb7vetiqt.s[18]++,new Employee(req.body));// this is the only field we're checking with express-validator
//newEmployee.password = checkedData.password;
cov_1qb7vetiqt.s[19]++;newEmployee.display_name=`${req.body.first_name} ${req.body.last_name.substring(0,1)}`;let tempPassword=(cov_1qb7vetiqt.s[20]++,'temporaryPass');cov_1qb7vetiqt.s[21]++;newEmployee.password=tempPassword;// Employee.find().sort({})
cov_1qb7vetiqt.s[22]++;bcrypt.genSalt(10,(err,salt)=>{cov_1qb7vetiqt.f[3]++;cov_1qb7vetiqt.s[23]++;bcrypt.hash(newEmployee.password,salt,(err,hash)=>{cov_1qb7vetiqt.f[4]++;cov_1qb7vetiqt.s[24]++;newEmployee.password=hash;cov_1qb7vetiqt.s[25]++;newEmployee.save((err,employee)=>{cov_1qb7vetiqt.f[5]++;cov_1qb7vetiqt.s[26]++;if(err){cov_1qb7vetiqt.b[2][0]++;cov_1qb7vetiqt.s[27]++;// console.error(err);
res.status(500).json({error:err});cov_1qb7vetiqt.s[28]++;return next(err);}else{cov_1qb7vetiqt.b[2][1]++;cov_1qb7vetiqt.s[29]++;return res.status(200).json({msg:'Employee successfully added',employee:employee});}});});});}];// GET one employee by _id
cov_1qb7vetiqt.s[30]++;exports.getOneEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[6]++;cov_1qb7vetiqt.s[31]++;Employee.findById(req.params.id,(err,employee)=>{cov_1qb7vetiqt.f[7]++;cov_1qb7vetiqt.s[32]++;if(err){cov_1qb7vetiqt.b[3][0]++;cov_1qb7vetiqt.s[33]++;res.status(500).json({error:err});}else{cov_1qb7vetiqt.b[3][1]++;cov_1qb7vetiqt.s[34]++;return res.status(200).json({msg:'Successfully found employee',employee:employee});}});};// PUT update one employee by _id
cov_1qb7vetiqt.s[35]++;exports.updateEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[8]++;cov_1qb7vetiqt.s[36]++;Employee.findByIdAndUpdate(req.params.id,req.body,{new:true},(err,employee)=>{cov_1qb7vetiqt.f[9]++;cov_1qb7vetiqt.s[37]++;if(err){cov_1qb7vetiqt.b[4][0]++;cov_1qb7vetiqt.s[38]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[4][1]++;cov_1qb7vetiqt.s[39]++;return res.status(200).json({msg:'Successfully updated employee',employee:employee});}});};// PUT - assign role to employee
// accepts params of employee id and role id
// searches db for the role and creates new object to push to employee.roles array
cov_1qb7vetiqt.s[40]++;exports.assignRole=(req,res,next)=>{cov_1qb7vetiqt.f[10]++;cov_1qb7vetiqt.s[41]++;Role.findById(req.params.role_id,(err,role)=>{cov_1qb7vetiqt.f[11]++;// check if the req.body has different values for certain fields
// if so assign those, if not, fall back to the values stored in the
// db for the role model
const newRole=(cov_1qb7vetiqt.s[42]++,{_id:role._id,name:role.name,salaried:role.salaried,rate_of_pay:(cov_1qb7vetiqt.b[5][0]++,req.body.granular_pay)||(cov_1qb7vetiqt.b[5][1]++,role.granular_pay),manager_privileges:(cov_1qb7vetiqt.b[6][0]++,req.body.manager_privileges)||(cov_1qb7vetiqt.b[6][1]++,role.manager_privileges)});cov_1qb7vetiqt.s[43]++;Employee.findByIdAndUpdate(req.params.id,{$push:{roles:newRole}},{new:true,safe:true},(err,employee)=>{cov_1qb7vetiqt.f[12]++;cov_1qb7vetiqt.s[44]++;if(err){cov_1qb7vetiqt.b[7][0]++;cov_1qb7vetiqt.s[45]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[7][1]++;cov_1qb7vetiqt.s[46]++;return res.status(200).json({msg:'Successfully assingned new role',employee:employee});}});});};// DELETE remove an employee by _id
cov_1qb7vetiqt.s[47]++;exports.deleteEmployee=(req,res,next)=>{cov_1qb7vetiqt.f[13]++;cov_1qb7vetiqt.s[48]++;Employee.remove({_id:req.params.id},(err,result)=>{cov_1qb7vetiqt.f[14]++;cov_1qb7vetiqt.s[49]++;if(err){cov_1qb7vetiqt.b[8][0]++;cov_1qb7vetiqt.s[50]++;res.status(422).json({error:err});}else{cov_1qb7vetiqt.b[8][1]++;cov_1qb7vetiqt.s[51]++;return res.status(200).json({result,msg:'Successfully deleted employee'});}});};/////////////////////////////////////////
// // strategy must come before login POST request
cov_1qb7vetiqt.s[52]++;passport.use(new LocalStrategy({// rename fields
// By default, LocalStrategy expects to find credentials in parameters named
// username and password. If your site prefers to name these fields differently,
// options are available to change the defaults.
// passwordField: 'password'
usernameField:'email'},function(email,password,done){cov_1qb7vetiqt.f[15]++;cov_1qb7vetiqt.s[53]++;// 2: working to here so far
// console.log('hey 2');
Employee.findOne({email:email},function(err,user){cov_1qb7vetiqt.f[16]++;cov_1qb7vetiqt.s[54]++;// 4: working here so far
// console.log('hey 4');
if(err){cov_1qb7vetiqt.b[9][0]++;cov_1qb7vetiqt.s[55]++;return done(err);}else{cov_1qb7vetiqt.b[9][1]++;}// if there is no username match
cov_1qb7vetiqt.s[56]++;if(!user){cov_1qb7vetiqt.b[10][0]++;cov_1qb7vetiqt.s[57]++;// 5: working here so far
// console.log('hey 5 - OR: email not in DB');
return done(null,false,'email not in DB.');}else{cov_1qb7vetiqt.b[10][1]++;}// continue if there is an employee match
// console.log('hey 5 - OR: found employee');
// user.password is the hashed password from the DB
// remember, user is just the session global variable
// console.log('hey 6 - OR: checking password');
cov_1qb7vetiqt.s[58]++;bcrypt.compare(password,user.password,function(err,isMatch){cov_1qb7vetiqt.f[17]++;cov_1qb7vetiqt.s[59]++;if(err){cov_1qb7vetiqt.b[11][0]++;cov_1qb7vetiqt.s[60]++;return done(err);}else{cov_1qb7vetiqt.b[11][1]++;}cov_1qb7vetiqt.s[61]++;if(isMatch){cov_1qb7vetiqt.b[12][0]++;cov_1qb7vetiqt.s[62]++;// console.log('hey 7 - OR: passwords match');
return done(null,user);}else{cov_1qb7vetiqt.b[12][1]++;cov_1qb7vetiqt.s[63]++;// console.log('hey 7 - OR: passwords dont match');
return done(null,false,'Incorrect password');}// BOOM FrickALOOOOOOOOM!!!!! it all works
});});}));// serialize and deserialize
cov_1qb7vetiqt.s[64]++;passport.serializeUser(function(user,done){cov_1qb7vetiqt.f[18]++;cov_1qb7vetiqt.s[65]++;// user is a session variable
done(null,user.id);});cov_1qb7vetiqt.s[66]++;passport.deserializeUser(function(id,done){cov_1qb7vetiqt.f[19]++;cov_1qb7vetiqt.s[67]++;Employee.findById(id,function(err,user){cov_1qb7vetiqt.f[20]++;cov_1qb7vetiqt.s[68]++;console.log('this code isnt being invoked in the test, but is normally');cov_1qb7vetiqt.s[69]++;done(err,user);});});cov_1qb7vetiqt.s[70]++;exports.login=(req,res,next)=>{cov_1qb7vetiqt.f[21]++;cov_1qb7vetiqt.s[71]++;passport.authenticate('local',function(err,user,info){cov_1qb7vetiqt.f[22]++;cov_1qb7vetiqt.s[72]++;if(err){cov_1qb7vetiqt.b[13][0]++;cov_1qb7vetiqt.s[73]++;return next(err);}else{cov_1qb7vetiqt.b[13][1]++;}cov_1qb7vetiqt.s[74]++;if(!user){cov_1qb7vetiqt.b[14][0]++;cov_1qb7vetiqt.s[75]++;// return res.status(401).json({msg: 'Employee login failed', reason: info});
// return res.status(401).json({auth: false, token: null, reason: info});
// trying to get around Possibly Unhandled Rejection -- it works
// i want to get the data from the json response
// but AngularJS is preventing this
return res.status(400).json({auth:false,token:null,reason:info});// sending 401. AngularJS won't let me get the data. Just use 400...
}else{cov_1qb7vetiqt.b[14][1]++;}cov_1qb7vetiqt.s[76]++;req.logIn(user,function(err){cov_1qb7vetiqt.f[23]++;cov_1qb7vetiqt.s[77]++;if(err){cov_1qb7vetiqt.b[15][0]++;cov_1qb7vetiqt.s[78]++;return next(err);}else{cov_1qb7vetiqt.b[15][1]++;}let token=(cov_1qb7vetiqt.s[79]++,jwt.sign({id:req.user._id},process.env.secret_JWT,{expiresIn:3600// one hour
}));cov_1qb7vetiqt.s[80]++;return res.status(200).json({auth:true,token:token});// return res.status(200).json({msg: 'Employee successfully logged in', employee: req.user});
});})(req,res,next);};cov_1qb7vetiqt.s[81]++;exports.logout=(req,res,next)=>{cov_1qb7vetiqt.f[24]++;cov_1qb7vetiqt.s[82]++;// if(!req.user) res.status(500).json({msg: 'Why log out if not logged in?'});
// else {
//   req.logOut();
//   return res.status(200).json({msg: 'Employee successfully logged out'});
// }
if(!req.user){cov_1qb7vetiqt.b[16][0]++;cov_1qb7vetiqt.s[83]++;console.log('no user');}else{cov_1qb7vetiqt.b[16][1]++;}cov_1qb7vetiqt.s[84]++;req.logOut();cov_1qb7vetiqt.s[85]++;return res.status(200).json({auth:false,token:null});};